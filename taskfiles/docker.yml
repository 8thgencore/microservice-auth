version: '3'

tasks:
  build:
    desc: Build all Docker images
    deps: [build-app, build-migrator]

  build-app:
    desc: Build application Docker image
    deps: [":common:check-env"]
    cmds:
      - docker buildx build --no-cache --platform linux/amd64 -t auth:{{.APP_IMAGE_TAG}} .

  build-migrator:
    desc: Build migrator Docker image
    deps: [":common:check-env"]
    cmds:
      - docker buildx build --no-cache --platform linux/amd64 -t migrator-auth:{{.MIGRATOR_IMAGE_TAG}} -f migrator.Dockerfile .

  # Development
  dev:network:
    desc: Create Docker network for development services
    cmds:
      - docker network create -d bridge service-net-dev

  dev:up:
    desc: Deploy development services using Docker Compose
    deps: [":common:check-env"]
    cmds:
      - |
        docker compose -p microservice-auth-dev \
          -f docker-compose.dev.yaml \
          --env-file=.env.local \
          up -d

  dev:stop:
    desc: Stop all development services using Docker Compose
    deps: [":common:check-env"]
    cmds:
      - |
        docker compose -p microservice-auth-dev \
          -f docker-compose.dev.yaml \
          --env-file=.env.local \
          down

  # Production
  prod:network:
    desc: Create Docker network for production services
    cmds:
      - docker network create -d bridge service-net

  prod:up:
    desc: Deploy production services using Docker Compose
    deps: [":common:check-env"]
    cmds:
      - |
        docker compose -p microservice-auth \
          -f docker-compose.yaml \
          --env-file=.env.{{.ENV}} \
          up -d

  prod:stop:
    desc: Stop all production services using Docker Compose
    deps: [":common:check-env"]
    cmds:
      - |
        docker compose -p microservice-auth \
          -f docker-compose.yaml \
          --env-file=.env.{{.ENV}} \
          down
