{
  "swagger": "2.0",
  "info": {
    "title": "Auth API",
    "version": "1.0.0",
    "contact": {
      "name": "Walter White"
    }
  },
  "tags": [
    {
      "name": "AuthV1"
    },
    {
      "name": "AccessV1"
    },
    {
      "name": "UserV1"
    }
  ],
  "host": "{HTTP_HOST}:{HTTP_PORT}",
  "schemes": [
    "http",
    "https"
  ],
  "consumes": [
    "application/json"
  ],
  "produces": [
    "application/json"
  ],
  "paths": {
    "/v1/access/check": {
      "post": {
        "summary": "Check executes user authorization for an endpoint.",
        "operationId": "AccessV1_Check",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "type": "object",
              "properties": {}
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "description": "CheckRequest contains the endpoint a user is trying to access.",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/access_v1CheckRequest"
            }
          }
        ],
        "tags": [
          "AccessV1"
        ]
      }
    },
    "/v1/access/role-endpoint": {
      "post": {
        "summary": "AddRoleEndpoint adds a new endpoint permission with roles.",
        "operationId": "AccessV1_AddRoleEndpoint",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "type": "object",
              "properties": {}
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "description": "AddRoleEndpointRequest represents the request to add roles to an endpoint.",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/access_v1AddRoleEndpointRequest"
            }
          }
        ],
        "tags": [
          "AccessV1"
        ]
      },
      "put": {
        "summary": "UpdateRoleEndpoint updates an existing endpoint permission.",
        "operationId": "AccessV1_UpdateRoleEndpoint",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "type": "object",
              "properties": {}
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "description": "UpdateRoleEndpointRequest represents the request to update roles for an endpoint.",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/access_v1UpdateRoleEndpointRequest"
            }
          }
        ],
        "tags": [
          "AccessV1"
        ]
      }
    },
    "/v1/access/role-endpoint/{endpoint}": {
      "delete": {
        "summary": "DeleteRoleEndpoint removes an existing endpoint permission.",
        "operationId": "AccessV1_DeleteRoleEndpoint",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "type": "object",
              "properties": {}
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "endpoint",
            "description": "The endpoint to be deleted.",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "tags": [
          "AccessV1"
        ]
      }
    },
    "/v1/access/role-endpoints": {
      "get": {
        "summary": "GetRoleEndpoints lists all endpoints and their allowed roles.",
        "operationId": "AccessV1_GetRoleEndpoints",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/access_v1GetRoleEndpointsResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "tags": [
          "AccessV1"
        ]
      }
    },
    "/v1/auth/login": {
      "post": {
        "summary": "Login gives refresh token and access token based on user credentials.",
        "operationId": "AuthV1_Login",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/auth_v1LoginResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "description": "LoginRequest represents the request to log in a user.",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/auth_v1LoginRequest"
            }
          }
        ],
        "tags": [
          "AuthV1"
        ]
      }
    },
    "/v1/auth/logout": {
      "post": {
        "summary": "Logout invalidates the refresh token.",
        "operationId": "AuthV1_Logout",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "type": "object",
              "properties": {}
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "description": "LogoutRequest represents the request to log out a user by invalidating their refresh token.",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/auth_v1LogoutRequest"
            }
          }
        ],
        "tags": [
          "AuthV1"
        ]
      }
    },
    "/v1/auth/refresh": {
      "post": {
        "summary": "RefreshTokens gives both a new access token and a new refresh token.",
        "operationId": "AuthV1_RefreshTokens",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/auth_v1RefreshTokensResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "description": "RefreshTokensRequest represents the request to refresh both tokens.",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/auth_v1RefreshTokensRequest"
            }
          }
        ],
        "tags": [
          "AuthV1"
        ]
      }
    },
    "/v1/user": {
      "get": {
        "summary": "Get is used to obtain user info by ID.",
        "operationId": "UserV1_Get",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/user_v1GetResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "id",
            "description": "ID of the user to retrieve.",
            "in": "query",
            "required": false,
            "type": "string"
          }
        ],
        "tags": [
          "UserV1"
        ]
      },
      "delete": {
        "summary": "Delete is used for deleting a user by ID.",
        "operationId": "UserV1_Delete",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "type": "object",
              "properties": {}
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "id",
            "description": "ID of the user to delete.",
            "in": "query",
            "required": false,
            "type": "string"
          }
        ],
        "tags": [
          "UserV1"
        ]
      },
      "post": {
        "summary": "Create is used for creating a new user.",
        "operationId": "UserV1_Create",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/user_v1CreateResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "description": "CreateRequest represents the request to create a user.",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/user_v1CreateRequest"
            }
          }
        ],
        "tags": [
          "UserV1"
        ]
      },
      "patch": {
        "summary": "Update is used for updating existing user info.",
        "operationId": "UserV1_Update",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "type": "object",
              "properties": {}
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "description": "UpdateRequest represents the request to update a user.",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/user_v1UpdateRequest"
            }
          }
        ],
        "tags": [
          "UserV1"
        ]
      }
    },
    "/v1/user/change-password": {
      "post": {
        "summary": "ChangePassword allows users to change their password securely",
        "operationId": "UserV1_ChangePassword",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "type": "object",
              "properties": {}
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "description": "ChangePasswordRequest represents the request to change a user's password.",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/user_v1ChangePasswordRequest"
            }
          }
        ],
        "tags": [
          "UserV1"
        ]
      }
    },
    "/v1/user/me": {
      "get": {
        "summary": "GetMe returns information about the currently authenticated user",
        "operationId": "UserV1_GetMe",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/user_v1GetMeResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "tags": [
          "UserV1"
        ]
      },
      "delete": {
        "summary": "DeleteMe allows the currently authenticated user to delete their account",
        "operationId": "UserV1_DeleteMe",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "type": "object",
              "properties": {}
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "tags": [
          "UserV1"
        ]
      },
      "patch": {
        "summary": "UpdateMe allows the currently authenticated user to update their own information",
        "operationId": "UserV1_UpdateMe",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "type": "object",
              "properties": {}
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "description": "UpdateMeRequest represents the data that authenticated users can update about themselves.",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/user_v1UpdateMeRequest"
            }
          }
        ],
        "tags": [
          "UserV1"
        ]
      }
    }
  },
  "definitions": {
    "access_v1AddRoleEndpointRequest": {
      "type": "object",
      "properties": {
        "endpoint": {
          "type": "string",
          "description": "The endpoint to which roles will be added."
        },
        "allowedRoles": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/user_v1Role"
          },
          "description": "The roles allowed to access this endpoint."
        }
      },
      "description": "AddRoleEndpointRequest represents the request to add roles to an endpoint."
    },
    "access_v1CheckRequest": {
      "type": "object",
      "properties": {
        "endpoint": {
          "type": "string",
          "description": "The endpoint where the user wants access."
        }
      },
      "description": "CheckRequest contains the endpoint a user is trying to access."
    },
    "access_v1EndpointPermissions": {
      "type": "object",
      "properties": {
        "endpoint": {
          "type": "string",
          "description": "The endpoint being described."
        },
        "allowedRoles": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/user_v1Role"
          },
          "description": "The roles allowed to access this endpoint."
        }
      },
      "description": "EndpointPermissions represents the permission settings for an endpoint."
    },
    "access_v1GetRoleEndpointsResponse": {
      "type": "object",
      "properties": {
        "endpointPermissions": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/access_v1EndpointPermissions"
          },
          "description": "List of endpoint permissions."
        }
      },
      "description": "GetRoleEndpointsResponse represents the response containing a list of endpoint permissions."
    },
    "access_v1UpdateRoleEndpointRequest": {
      "type": "object",
      "properties": {
        "endpoint": {
          "type": "string",
          "description": "The endpoint to be updated."
        },
        "allowedRoles": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/user_v1Role"
          },
          "description": "The updated roles for this endpoint."
        }
      },
      "description": "UpdateRoleEndpointRequest represents the request to update roles for an endpoint."
    },
    "auth_v1Creds": {
      "type": "object",
      "properties": {
        "username": {
          "type": "string",
          "description": "Username of the user."
        },
        "password": {
          "type": "string",
          "description": "Password of the user."
        }
      },
      "description": "Creds represents user credentials required for login."
    },
    "auth_v1LoginRequest": {
      "type": "object",
      "properties": {
        "creds": {
          "$ref": "#/definitions/auth_v1Creds",
          "description": "User credentials for logging in."
        }
      },
      "description": "LoginRequest represents the request to log in a user."
    },
    "auth_v1LoginResponse": {
      "type": "object",
      "properties": {
        "refreshToken": {
          "type": "string",
          "description": "User's refresh token used to obtain an access token."
        },
        "accessToken": {
          "type": "string",
          "description": "User's access token for immediate use."
        }
      },
      "description": "LoginResponse represents the response after a successful login."
    },
    "auth_v1LogoutRequest": {
      "type": "object",
      "properties": {
        "refreshToken": {
          "type": "string",
          "description": "The refresh token to invalidate."
        }
      },
      "description": "LogoutRequest represents the request to log out a user by invalidating their refresh token."
    },
    "auth_v1RefreshTokensRequest": {
      "type": "object",
      "properties": {
        "refreshToken": {
          "type": "string",
          "description": "User's current refresh token used to refresh both tokens."
        }
      },
      "description": "RefreshTokensRequest represents the request to refresh both tokens."
    },
    "auth_v1RefreshTokensResponse": {
      "type": "object",
      "properties": {
        "refreshToken": {
          "type": "string",
          "description": "User's new refresh token."
        },
        "accessToken": {
          "type": "string",
          "description": "User's new access token."
        }
      },
      "description": "RefreshTokensResponse represents the response with both refreshed tokens."
    },
    "protobufAny": {
      "type": "object",
      "properties": {
        "@type": {
          "type": "string"
        }
      },
      "additionalProperties": {}
    },
    "rpcStatus": {
      "type": "object",
      "properties": {
        "code": {
          "type": "integer",
          "format": "int32"
        },
        "message": {
          "type": "string"
        },
        "details": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/protobufAny"
          }
        }
      }
    },
    "user_v1ChangePasswordRequest": {
      "type": "object",
      "properties": {
        "currentPassword": {
          "type": "string",
          "title": "Current password for verification"
        },
        "newPassword": {
          "type": "string",
          "title": "New password to set"
        }
      },
      "description": "ChangePasswordRequest represents the request to change a user's password."
    },
    "user_v1CreateRequest": {
      "type": "object",
      "properties": {
        "user": {
          "$ref": "#/definitions/user_v1UserCreate"
        }
      },
      "description": "CreateRequest represents the request to create a user."
    },
    "user_v1CreateResponse": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string",
          "description": "ID of the created user."
        }
      },
      "description": "CreateResponse represents the response after a user is created."
    },
    "user_v1GetMeResponse": {
      "type": "object",
      "properties": {
        "user": {
          "$ref": "#/definitions/user_v1User",
          "title": "Full user information"
        }
      },
      "description": "GetMeResponse represents the response containing the current user's information."
    },
    "user_v1GetResponse": {
      "type": "object",
      "properties": {
        "user": {
          "$ref": "#/definitions/user_v1User"
        }
      },
      "description": "GetResponse represents the response containing the user info."
    },
    "user_v1Role": {
      "type": "string",
      "enum": [
        "UNKNOWN_UNSPECIFIED",
        "USER",
        "ADMIN"
      ],
      "default": "UNKNOWN_UNSPECIFIED",
      "description": "Role defines the various roles a user can have in the system.\n\n - UNKNOWN_UNSPECIFIED: Unknown or unspecified role.\n - USER: Regular user role.\n - ADMIN: Admin user role."
    },
    "user_v1UpdateMeRequest": {
      "type": "object",
      "properties": {
        "name": {
          "type": "string",
          "title": "[optional] Name of the user to update"
        },
        "email": {
          "type": "string",
          "title": "[optional] Email of the user to update"
        }
      },
      "description": "UpdateMeRequest represents the data that authenticated users can update about themselves."
    },
    "user_v1UpdateRequest": {
      "type": "object",
      "properties": {
        "user": {
          "$ref": "#/definitions/user_v1UserUpdate"
        }
      },
      "description": "UpdateRequest represents the request to update a user."
    },
    "user_v1User": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string",
          "description": "ID of the user."
        },
        "name": {
          "type": "string",
          "description": "Name of the user."
        },
        "email": {
          "type": "string",
          "description": "Email of the user."
        },
        "role": {
          "$ref": "#/definitions/user_v1Role",
          "description": "Role of the user."
        },
        "created": {
          "type": "string",
          "format": "date-time",
          "description": "Timestamp when the user was created."
        },
        "updated": {
          "type": "string",
          "format": "date-time",
          "description": "Timestamp when the user info was last updated."
        }
      },
      "description": "User represents a user in the system."
    },
    "user_v1UserCreate": {
      "type": "object",
      "properties": {
        "name": {
          "type": "string",
          "description": "Name of the user to create."
        },
        "email": {
          "type": "string",
          "description": "Email of the user to create."
        },
        "password": {
          "type": "string",
          "description": "Password of the user to create."
        },
        "passwordConfirm": {
          "type": "string",
          "description": "Password confirmation of the user to create."
        },
        "role": {
          "$ref": "#/definitions/user_v1Role",
          "description": "Role of the user to create."
        }
      },
      "description": "UserCreate represents the data required to create a new user."
    },
    "user_v1UserUpdate": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string",
          "description": "ID of the user to update."
        },
        "name": {
          "type": "string",
          "description": "[optional] Name of the user to update."
        },
        "email": {
          "type": "string",
          "description": "[optional] Email of the user to update."
        },
        "role": {
          "$ref": "#/definitions/user_v1Role",
          "description": "Role of the user to update."
        }
      },
      "description": "UserUpdate represents the data required to update an existing user."
    }
  }
}
