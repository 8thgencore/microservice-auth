{
  "swagger": "2.0",
  "info": {
    "title": "User API",
    "version": "1.0.0",
    "contact": {
      "name": "Walter White"
    }
  },
  "tags": [
    {
      "name": "UserV1"
    }
  ],
  "host": "0.0.0.0:8480",
  "schemes": [
    "http",
    "https"
  ],
  "consumes": [
    "application/json"
  ],
  "produces": [
    "application/json"
  ],
  "paths": {
    "/v1/user": {
      "get": {
        "summary": "Get is used to obtain user info by ID.",
        "operationId": "UserV1_Get",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/user_v1GetResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "id",
            "description": "ID of the user to retrieve.",
            "in": "query",
            "required": false,
            "type": "string"
          }
        ],
        "tags": [
          "UserV1"
        ]
      },
      "delete": {
        "summary": "Delete is used for deleting a user by ID.",
        "operationId": "UserV1_Delete",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "type": "object",
              "properties": {}
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "id",
            "description": "ID of the user to delete.",
            "in": "query",
            "required": false,
            "type": "string"
          }
        ],
        "tags": [
          "UserV1"
        ]
      },
      "post": {
        "summary": "Create is used for creating a new user.",
        "operationId": "UserV1_Create",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/user_v1CreateResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "description": "CreateRequest represents the request to create a user.",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/user_v1CreateRequest"
            }
          }
        ],
        "tags": [
          "UserV1"
        ]
      },
      "patch": {
        "summary": "Update is used for updating existing user info.",
        "operationId": "UserV1_Update",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "type": "object",
              "properties": {}
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "description": "UpdateRequest represents the request to update a user.",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/user_v1UpdateRequest"
            }
          }
        ],
        "tags": [
          "UserV1"
        ]
      }
    }
  },
  "definitions": {
    "protobufAny": {
      "type": "object",
      "properties": {
        "@type": {
          "type": "string"
        }
      },
      "additionalProperties": {}
    },
    "rpcStatus": {
      "type": "object",
      "properties": {
        "code": {
          "type": "integer",
          "format": "int32"
        },
        "message": {
          "type": "string"
        },
        "details": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/protobufAny"
          }
        }
      }
    },
    "user_v1CreateRequest": {
      "type": "object",
      "properties": {
        "user": {
          "$ref": "#/definitions/user_v1UserCreate"
        }
      },
      "description": "CreateRequest represents the request to create a user."
    },
    "user_v1CreateResponse": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string",
          "description": "ID of the created user."
        }
      },
      "description": "CreateResponse represents the response after a user is created."
    },
    "user_v1GetResponse": {
      "type": "object",
      "properties": {
        "user": {
          "$ref": "#/definitions/user_v1User"
        }
      },
      "description": "GetResponse represents the response containing the user info."
    },
    "user_v1Role": {
      "type": "string",
      "enum": [
        "ROLE_UNKNOWN_UNSPECIFIED",
        "ROLE_USER",
        "ROLE_ADMIN"
      ],
      "default": "ROLE_UNKNOWN_UNSPECIFIED",
      "description": "Role defines the various roles a user can have in the system.\n\n - ROLE_UNKNOWN_UNSPECIFIED: Unknown or unspecified role.\n - ROLE_USER: Regular user role.\n - ROLE_ADMIN: Admin user role."
    },
    "user_v1UpdateRequest": {
      "type": "object",
      "properties": {
        "user": {
          "$ref": "#/definitions/user_v1UserUpdate"
        }
      },
      "description": "UpdateRequest represents the request to update a user."
    },
    "user_v1User": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string",
          "description": "ID of the user."
        },
        "name": {
          "type": "string",
          "description": "Name of the user."
        },
        "email": {
          "type": "string",
          "description": "Email of the user."
        },
        "role": {
          "$ref": "#/definitions/user_v1Role",
          "description": "Role of the user."
        },
        "created": {
          "type": "string",
          "format": "date-time",
          "description": "Timestamp when the user was created."
        },
        "updated": {
          "type": "string",
          "format": "date-time",
          "description": "Timestamp when the user info was last updated."
        }
      },
      "description": "User represents a user in the system."
    },
    "user_v1UserCreate": {
      "type": "object",
      "properties": {
        "name": {
          "type": "string",
          "description": "Name of the user to create."
        },
        "email": {
          "type": "string",
          "description": "Email of the user to create."
        },
        "password": {
          "type": "string",
          "description": "Password of the user to create."
        },
        "passwordConfirm": {
          "type": "string",
          "description": "Password confirmation of the user to create."
        },
        "role": {
          "$ref": "#/definitions/user_v1Role",
          "description": "Role of the user to create."
        }
      },
      "description": "UserCreate represents the data required to create a new user."
    },
    "user_v1UserUpdate": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string",
          "description": "ID of the user to update."
        },
        "name": {
          "type": "string",
          "description": "[optional] Name of the user to update."
        },
        "email": {
          "type": "string",
          "description": "[optional] Email of the user to update."
        },
        "role": {
          "$ref": "#/definitions/user_v1Role",
          "description": "Role of the user to update."
        }
      },
      "description": "UserUpdate represents the data required to update an existing user."
    }
  }
}
